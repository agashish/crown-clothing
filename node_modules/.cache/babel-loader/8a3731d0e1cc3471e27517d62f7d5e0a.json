{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBkCmged6iKTqwG4nrDgQCgnVsgOtHS2RE\",\n  authDomain: \"crwn-db-76492.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-76492.firebaseio.com\",\n  projectId: \"crwn-db-76492\",\n  storageBucket: \"crwn-db-76492.appspot.com\",\n  messagingSenderId: \"752872430224\",\n  appId: \"1:752872430224:web:2a42347eed09c025729615\"\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); // #### JUST CHECK AND SAVE USER DATA\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  // #### USER DATA IS NULL\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get(); // PROVIDE THE ACTUAL DATA - MEANS SNAPSHOT IF SOMEONE IS ASKING ABOUT IT.    \n\n  console.log(snapShot);\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = snapShot;\n  }\n}; // #### IT WILL GIVE ACCESS OF GOOGLE AUTH PROVIDER CLASS FROM AUTH LIB.\n\nconst provider = new firebase.auth.GoogleAuthProvider(); // #### ALWAYS TRIGGER THE GOOGLE POPUP WHEN IT INVOKES\n\nprovider.setCustomParameters({\n  prompt: 'select_account'\n}); // #### INVOKE TO OPEN GOOGLE SININ POPUP OR OTHERS LIKE TWITTER | FACEBOOK - MULTIPLE POPUPS\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider); // #### EXPORTED THE WHOLE LIBRARY\n\nexport default firebase;","map":{"version":3,"sources":["D:/rjsProjects/crown-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","auth","firestore","createUserProfileDocument","userAuth","additionalData","userRef","doc","uid","snapShot","get","console","log","exists","displayName","email","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,+BAFD;AAGXC,EAAAA,WAAW,EAAE,sCAHF;AAIXC,EAAAA,SAAS,EAAE,eAJA;AAKXC,EAAAA,aAAa,EAAE,2BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE;AAPI,CAAf;AAUAR,QAAQ,CAACS,aAAT,CAAuBR,MAAvB;AAEA,OAAO,MAAMS,IAAI,GAAGV,QAAQ,CAACU,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGX,QAAQ,CAACW,SAAT,EAAlB,C,CAEP;;AACA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAEzE;AACA,MAAI,CAACD,QAAL,EAAgB;AAEhB,QAAME,OAAO,GAAGJ,SAAS,CAACK,GAAV,CAAe,SAAQH,QAAQ,CAACI,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB,CANyE,CAMpC;;AAErCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,MAAI,CAACA,QAAQ,CAACI,MAAd,EAAuB;AAEnB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBN,QAA/B;AACH;AACJ,CAbM,C,CAeP;;AACA,MAAMO,QAAQ,GAAG,IAAIzB,QAAQ,CAACU,IAAT,CAAcgB,kBAAlB,EAAjB,C,CAEA;;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B,E,CAEA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAMnB,IAAI,CAACoB,eAAL,CAAqBL,QAArB,CAA/B,C,CAEP;;AACA,eAAezB,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBkCmged6iKTqwG4nrDgQCgnVsgOtHS2RE\",\r\n    authDomain: \"crwn-db-76492.firebaseapp.com\",\r\n    databaseURL: \"https://crwn-db-76492.firebaseio.com\",\r\n    projectId: \"crwn-db-76492\",\r\n    storageBucket: \"crwn-db-76492.appspot.com\",\r\n    messagingSenderId: \"752872430224\",\r\n    appId: \"1:752872430224:web:2a42347eed09c025729615\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\n// #### JUST CHECK AND SAVE USER DATA\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n\r\n    // #### USER DATA IS NULL\r\n    if( !userAuth ) return;\r\n    \r\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\r\n    const snapShot = await userRef.get() // PROVIDE THE ACTUAL DATA - MEANS SNAPSHOT IF SOMEONE IS ASKING ABOUT IT.    \r\n    \r\n    console.log(snapShot);\r\n    if( !snapShot.exists ) {\r\n\r\n        const { displayName, email } = snapShot;\r\n    }\r\n}\r\n\r\n// #### IT WILL GIVE ACCESS OF GOOGLE AUTH PROVIDER CLASS FROM AUTH LIB.\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n// #### ALWAYS TRIGGER THE GOOGLE POPUP WHEN IT INVOKES\r\nprovider.setCustomParameters({ prompt: 'select_account' })\r\n\r\n// #### INVOKE TO OPEN GOOGLE SININ POPUP OR OTHERS LIKE TWITTER | FACEBOOK - MULTIPLE POPUPS\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider)\r\n\r\n// #### EXPORTED THE WHOLE LIBRARY\r\nexport default firebase;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}