{"ast":null,"code":"import { createSelector } from 'reselect'; // #### INPUT SELECTOR - DOES NOT USE CREATE SELECTOR\n\nconst selectCart = state => state.cart; // #### OUTPUT SELECTOR - IT WILL USE BOTH INPUT SELECTOR & CREATE SELECTOR | MEMOIZE SELECTOR\n\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden); // #### CART ITEM COUNT SELECTOR\n\nexport const selectCartItemCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["D:/rjsProjects/crown-clothing/src/redux/cart-reducer/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B,C,CAEA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC,C,CAEA;;;AACA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAExCE,IAAD,IAAUA,IAAI,CAACE,SAF0B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAE1CE,IAAI,IAAIA,IAAI,CAACI,MAF6B,CAAvC,C,CAKP;;AACA,OAAO,MAAMC,mBAAmB,GAAGR,cAAc,CAC7C,CAACI,eAAD,CAD6C,EAE5CC,SAAD,IAAeA,SAAS,CAACI,MAAV,CACX,CAACC,mBAAD,EAAsBC,QAAtB,KACID,mBAAmB,GAAGC,QAAQ,CAACC,QAFxB,EAGX,CAHW,CAF8B,CAA1C;AASP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CACzC,CAACI,eAAD,CADyC,EAExCC,SAAD,IAAeA,SAAS,CAACI,MAAV,CACX,CAACC,mBAAD,EAAsBC,QAAtB,KACID,mBAAmB,GAAGC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACG,KAF5C,EAGX,CAHW,CAF0B,CAAtC","sourcesContent":["import {createSelector} from 'reselect';\r\n\r\n// #### INPUT SELECTOR - DOES NOT USE CREATE SELECTOR\r\nconst selectCart = state => state.cart;\r\n\r\n// #### OUTPUT SELECTOR - IT WILL USE BOTH INPUT SELECTOR & CREATE SELECTOR | MEMOIZE SELECTOR\r\nexport const selectCartItems = createSelector(\r\n    [selectCart],\r\n    (cart) => cart.cartItems \r\n);\r\n\r\nexport const selectCartHidden = createSelector(\r\n    [selectCart],\r\n    cart => cart.hidden\r\n)\r\n\r\n// #### CART ITEM COUNT SELECTOR\r\nexport const selectCartItemCount = createSelector(\r\n    [selectCartItems],\r\n    (cartItems) => cartItems.reduce(\r\n        (accumulatedQuantity, cartItem) => \r\n            accumulatedQuantity + cartItem.quantity, \r\n        0\r\n    )\r\n) \r\n\r\nexport const selectCartTotal = createSelector(\r\n    [selectCartItems],\r\n    (cartItems) => cartItems.reduce(\r\n        (accumulatedQuantity, cartItem) =>\r\n            accumulatedQuantity + cartItem.quantity * cartItem.price,\r\n        0            \r\n    )\r\n)"]},"metadata":{},"sourceType":"module"}